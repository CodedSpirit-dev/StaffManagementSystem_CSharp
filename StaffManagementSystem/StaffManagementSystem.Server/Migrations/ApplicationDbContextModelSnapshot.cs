// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StaffTemplate.Server.Data;

#nullable disable

namespace StaffManagementSystem.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("StaffManagementSystem.Server.Models.Employee", b =>
                {
                    b.Property<int?>("SocialSecurityNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("SocialSecurityNumber"));

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("BloodType")
                        .HasColumnType("text");

                    b.Property<string>("CURP")
                        .HasColumnType("text");

                    b.Property<int?>("Children")
                        .HasColumnType("integer");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text");

                    b.Property<string>("RFC")
                        .HasColumnType("text");

                    b.Property<string>("SecondLastname")
                        .HasColumnType("text");

                    b.HasKey("SocialSecurityNumber");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("StaffManagementSystem.Server.Models.Employee", b =>
                {
                    b.OwnsOne("StaffManagementSystem.Server.Models.Address", "Address", b1 =>
                        {
                            b1.Property<int>("EmployeeSocialSecurityNumber")
                                .HasColumnType("integer");

                            b1.Property<string>("City")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<string>("Neighborhood")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<string>("Number")
                                .HasMaxLength(10)
                                .HasColumnType("character varying(10)");

                            b1.Property<string>("PostalCode")
                                .HasMaxLength(10)
                                .HasColumnType("character varying(10)");

                            b1.Property<string>("State")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<string>("Street")
                                .HasMaxLength(200)
                                .HasColumnType("character varying(200)");

                            b1.HasKey("EmployeeSocialSecurityNumber");

                            b1.ToTable("Employees");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeSocialSecurityNumber");
                        });

                    b.OwnsOne("StaffManagementSystem.Server.Models.ContactInfo", "ContactInfo", b1 =>
                        {
                            b1.Property<int>("EmployeeSocialSecurityNumber")
                                .HasColumnType("integer");

                            b1.Property<string>("Email")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<string>("PhoneNumber")
                                .HasMaxLength(20)
                                .HasColumnType("character varying(20)");

                            b1.HasKey("EmployeeSocialSecurityNumber");

                            b1.ToTable("Employees");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeSocialSecurityNumber");
                        });

                    b.OwnsOne("StaffManagementSystem.Server.Models.EmergencyContact", "EmergencyContact", b1 =>
                        {
                            b1.Property<int>("EmployeeSocialSecurityNumber")
                                .HasColumnType("integer");

                            b1.Property<string>("EmergencyContactName")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<string>("EmergencyPhone")
                                .HasMaxLength(20)
                                .HasColumnType("character varying(20)");

                            b1.Property<string>("EmergencyRelationship")
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)");

                            b1.HasKey("EmployeeSocialSecurityNumber");

                            b1.ToTable("Employees");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeSocialSecurityNumber");
                        });

                    b.OwnsOne("StaffManagementSystem.Server.Models.EmploymentDetails", "EmploymentDetails", b1 =>
                        {
                            b1.Property<int>("EmployeeSocialSecurityNumber")
                                .HasColumnType("integer");

                            b1.Property<string>("BankAccountNumber")
                                .HasColumnType("text");

                            b1.Property<string>("BankName")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<bool?>("BirthCertificate")
                                .HasColumnType("boolean");

                            b1.Property<string>("BossName")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<DateOnly?>("DateOfJoining")
                                .HasColumnType("date");

                            b1.Property<string>("Department")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<string>("HiredBy")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<DateOnly?>("HiringDate")
                                .HasColumnType("date");

                            b1.Property<bool?>("INE")
                                .HasMaxLength(18)
                                .HasColumnType("boolean");

                            b1.Property<string>("INENumber")
                                .HasColumnType("text");

                            b1.Property<bool?>("InsuranceActive")
                                .HasColumnType("boolean");

                            b1.Property<string>("InterbankClabe")
                                .HasMaxLength(18)
                                .HasColumnType("character varying(18)");

                            b1.Property<bool?>("IsActive")
                                .HasColumnType("boolean");

                            b1.Property<bool?>("IsFileComplete")
                                .HasColumnType("boolean");

                            b1.Property<bool?>("NoCriminalRecordCertificate")
                                .HasColumnType("boolean");

                            b1.Property<string>("Notes")
                                .HasMaxLength(500)
                                .HasColumnType("character varying(500)");

                            b1.Property<string>("PaymentFrequency")
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)");

                            b1.Property<string>("PayrollType")
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)");

                            b1.Property<string>("Position")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<DateOnly?>("RegistrationDate")
                                .HasColumnType("date");

                            b1.Property<DateOnly?>("ResignationDate")
                                .HasColumnType("date");

                            b1.Property<decimal?>("Salary")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<string>("Shift")
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)");

                            b1.Property<string>("StudyGrade")
                                .HasColumnType("text");

                            b1.HasKey("EmployeeSocialSecurityNumber");

                            b1.ToTable("Employees");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeSocialSecurityNumber");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("ContactInfo")
                        .IsRequired();

                    b.Navigation("EmergencyContact")
                        .IsRequired();

                    b.Navigation("EmploymentDetails")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
